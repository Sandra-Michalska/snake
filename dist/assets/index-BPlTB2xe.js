(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))h(a);new MutationObserver(a=>{for(const u of a)if(u.type==="childList")for(const w of u.addedNodes)w.tagName==="LINK"&&w.rel==="modulepreload"&&h(w)}).observe(document,{childList:!0,subtree:!0});function i(a){const u={};return a.integrity&&(u.integrity=a.integrity),a.referrerPolicy&&(u.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?u.credentials="include":a.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function h(a){if(a.ep)return;a.ep=!0;const u=i(a);fetch(a.href,u)}})();const W={level1:{level:1,speed:.7,obstaclePositions:[{x:3,y:2},{x:3,y:3},{x:17,y:2},{x:17,y:3},{x:17,y:4},{x:7,y:7},{x:7,y:8},{x:7,y:9},{x:8,y:7},{x:8,y:8},{x:9,y:7},{x:9,y:8},{x:12,y:16},{x:12,y:13},{x:12,y:14},{x:12,y:15},{x:4,y:18},{x:4,y:17},{x:3,y:18},{x:3,y:17}]},level2:{level:2,speed:.55,obstaclePositions:[{x:1,y:7},{x:3,y:2},{x:3,y:3},{x:3,y:15},{x:3,y:14},{x:4,y:17},{x:4,y:18},{x:6,y:8},{x:7,y:7},{x:7,y:8},{x:8,y:7},{x:8,y:8},{x:9,y:7},{x:9,y:8},{x:12,y:13},{x:12,y:14},{x:12,y:15},{x:12,y:16},{x:13,y:15},{x:13,y:16},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:17,y:7},{x:17,y:8}]},level3:{level:3,speed:.45,obstaclePositions:[{x:1,y:7},{x:3,y:1},{x:3,y:2},{x:3,y:15},{x:3,y:14},{x:4,y:3},{x:4,y:4},{x:4,y:17},{x:4,y:18},{x:6,y:9},{x:7,y:8},{x:7,y:7},{x:7,y:6},{x:8,y:7},{x:8,y:8},{x:8,y:15},{x:9,y:16},{x:10,y:17},{x:12,y:7},{x:12,y:8},{x:13,y:15},{x:13,y:16},{x:16,y:13},{x:16,y:14},{x:16,y:18},{x:16,y:19},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:19,y:7},{x:19,y:8}]},level4:{level:4,speed:.38,obstaclePositions:[{x:0,y:1},{x:0,y:4},{x:0,y:19},{x:0,y:10},{x:0,y:11},{x:0,y:12},{x:2,y:2},{x:2,y:3},{x:3,y:12},{x:3,y:13},{x:4,y:9},{x:4,y:10},{x:4,y:19},{x:5,y:7},{x:5,y:6},{x:6,y:7},{x:6,y:8},{x:6,y:15},{x:7,y:7},{x:7,y:8},{x:7,y:15},{x:8,y:0},{x:8,y:1},{x:8,y:2},{x:9,y:16},{x:9,y:17},{x:10,y:15},{x:10,y:16},{x:10,y:17},{x:11,y:9},{x:11,y:8},{x:11,y:2},{x:12,y:5},{x:13,y:6},{x:13,y:7},{x:14,y:10},{x:14,y:11},{x:15,y:13},{x:15,y:14},{x:16,y:17},{x:16,y:19},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:15,y:1},{x:15,y:2},{x:18,y:3},{x:18,y:16},{x:18,y:17},{x:18,y:18},{x:18,y:19},{x:19,y:17}]},level5:{level:5,speed:.3,obstaclePositions:[{x:0,y:4},{x:0,y:1},{x:0,y:10},{x:0,y:18},{x:0,y:11},{x:0,y:12},{x:2,y:2},{x:2,y:3},{x:2,y:5},{x:2,y:6},{x:3,y:12},{x:3,y:13},{x:4,y:9},{x:4,y:10},{x:4,y:19},{x:5,y:3},{x:5,y:4},{x:5,y:7},{x:5,y:6},{x:6,y:4},{x:6,y:8},{x:6,y:15},{x:8,y:0},{x:8,y:1},{x:8,y:2},{x:8,y:13},{x:8,y:14},{x:9,y:8},{x:9,y:13},{x:9,y:14},{x:10,y:11},{x:10,y:17},{x:11,y:9},{x:11,y:8},{x:11,y:18},{x:11,y:19},{x:11,y:2},{x:12,y:5},{x:13,y:6},{x:13,y:7},{x:13,y:4},{x:13,y:5},{x:13,y:10},{x:13,y:11},{x:15,y:15},{x:15,y:16},{x:15,y:18},{x:15,y:19},{x:16,y:2},{x:16,y:18},{x:16,y:19},{x:17,y:6},{x:17,y:7},{x:17,y:8},{x:18,y:1},{x:18,y:2},{x:18,y:8},{x:18,y:16},{x:18,y:14},{x:18,y:13},{x:18,y:19},{x:19,y:17}]}};let n=[],d="right";const S={canChangeDirection:!0,canGoThroughWalls:!1,speed:0,powerupSpeedChangeTime:0};function Q(){n.push({x:2,y:0},{x:1,y:0},{x:0,y:0})}function V(e){return n[e]}function Y(){return n[0]}function j(){return n.length}function X(){for(let e=n.length-1;e>0;e--)n[e].x=n[e-1].x,n[e].y=n[e-1].y;d==="right"&&n[0].x++,d==="left"&&n[0].x--,d==="down"&&n[0].y++,d==="up"&&n[0].y--}function $(e,t){if(S.canChangeDirection&&t){if(e.preventDefault(),d==="right"&&t==="left"||d==="left"&&t==="right"||d==="up"&&t==="down"||d==="down"&&t==="up")return;d=t,S.canChangeDirection=!1}}function F(e){const t=n[n.length-1];for(let i=0;i<e;i++)n.push({x:t.x,y:t.y})}function K(e){for(let t=0;t<e;t++)n.pop()}function Z(e){S.speed*=e,setTimeout(function(){S.speed/=e},S.powerupSpeedChangeTime*1e3)}function z(){n[0].x>g.values.BOARD_SQUARES_NUMBER-1&&(n[0].x=0),n[0].x<0&&(n[0].x=g.values.BOARD_SQUARES_NUMBER-1),n[0].y>g.values.BOARD_SQUARES_NUMBER-1&&(n[0].y=0),n[0].y<0&&(n[0].y=g.values.BOARD_SQUARES_NUMBER-1)}function J(){S.canGoThroughWalls=!0,setTimeout(function(){S.canGoThroughWalls=!1},7e3)}function ee(){n=[],d="right"}const s={values:S,setPosition:Q,getSquarePosition:V,getHead:Y,getLength:j,move:X,changeDirection:$,goThroughBoardEdges:z,lengthen:F,shorten:K,changeSpeed:Z,goThroughWalls:J,resetVales:ee},x=29,v=1,L=30,p={apple:new Image,obstacle:new Image,obstacleTransparent:new Image,powerups:{lengthen:new Image,shorten:new Image,speedUp:new Image,speedDown:new Image,points:new Image,goThroughWalls:new Image}};p.apple.src="/snake/images/apple.png";p.obstacle.src="/snake/images/obstacle.png";p.obstacleTransparent.src="/snake/images/obstacle-transparent.png";p.powerups.lengthen.src="/snake/images/powerups/lengthen.png";p.powerups.shorten.src="/snake/images/powerups/shorten.png";p.powerups.speedUp.src="/snake/images/powerups/speed-up.png";p.powerups.speedDown.src="/snake/images/powerups/speed-down.png";p.powerups.points.src="/snake/images/powerups/points.png";p.powerups.goThroughWalls.src="/snake/images/powerups/go-through-walls.png";function R(e,t,i,h,a){const u=t*(v+x)+v,w=i*(v+x)+v;l.values.ctx.drawImage(e,u,w,h,a)}function q(e,t,i){const h=v*e+v,a=v*t+v;l.values.ctx.fillStyle=i,l.values.ctx.fillRect(e*x+h,t*x+a,x,x)}function te(){l.values.ctx.fillStyle="#fff",l.values.ctx.strokeStyle="#e1dfdc",l.values.ctx.fillRect(0,0,l.values.canvas.height,l.values.canvas.width);for(let e=.5;e<l.values.canvas.width;e+=L)l.values.ctx.moveTo(e,0),l.values.ctx.lineTo(e,l.values.canvas.height);for(let e=.5;e<l.values.canvas.height;e+=L)l.values.ctx.moveTo(0,e),l.values.ctx.lineTo(l.values.canvas.width,e);l.values.ctx.stroke()}function se(e){let t="obstacle";s.values.canGoThroughWalls&&(t="obstacleTransparent"),e.forEach(function(i){R(p[t],i.x,i.y,x,x)})}function ne(){for(let e=0;e<s.getLength();e++){if(e===0){q(s.getSquarePosition(e).x,s.getSquarePosition(e).y,"#e67312");continue}q(s.getSquarePosition(e).x,s.getSquarePosition(e).y,"#fc9125")}}function oe(e){e!==null&&R(p.apple,e.x,e.y,x,x)}function ae(e){Object.keys(e).length!==0&&R(p.powerups[e.type],e.x,e.y,x,x)}const f={drawBackground:te,drawObstacles:se,drawSnake:ne,drawApple:oe,drawPowerup:ae},A=1e3;let P=0,T=0,r=null,o={},ie=6,_=null,k=1,B,O,b=!1,c=null;const y={BOARD_SQUARES_NUMBER:20,bestScores:[],loopGameTimeout:null};function le(e){c=e,s.values.speed=c.snakeSpeed,s.values.powerupSpeedChangeTime=c.snakePowerupSpeedChangeTime,k=c.snakeLengthChange}function M(){f.drawBackground(),f.drawObstacles(c.levelSettings.obstaclePositions),s.setPosition(),f.drawSnake(),I(),f.drawApple(r),document.addEventListener("keydown",function(e){const t={37:"left",38:"up",39:"right",40:"down"},i=e.which,h=t[i];s.changeDirection(e,h)}),B=setTimeout(D,A)}function D(){clearTimeout(B),clearTimeout(y.loopGameTimeout),s.values.canChangeDirection=!0,f.drawBackground(),f.drawObstacles(c.levelSettings.obstaclePositions),re(),f.drawPowerup(o),f.drawApple(r),s.move(),s.goThroughBoardEdges(),f.drawSnake(),ue(),fe(),he(),ce(),y.loopGameTimeout=setTimeout(D,s.values.speed*A)}function I(){if(r)return;let e=!1;for(;!e;){r={x:Math.floor(Math.random()*y.BOARD_SQUARES_NUMBER),y:Math.floor(Math.random()*y.BOARD_SQUARES_NUMBER)},e=!0;for(let t=0;t<c.levelSettings.obstaclePositions.length;++t)r.x===c.levelSettings.obstaclePositions[t].x&&r.y===c.levelSettings.obstaclePositions[t].y&&(e=!1);for(let t=0;t<s.getLength();++t)r.x===s.getSquarePosition(t).x&&r.y===s.getSquarePosition(t).y&&(e=!1)}}function ce(){const e=s.getHead();e.x===r.x&&e.y===r.y&&(r=null,I(),f.drawApple(r),s.lengthen(1),U(c.levelSettings.level),T+=1,(T+c.levelSettings.level)%3===0&&ye())}function re(){Object.keys(o).length!==0&&(b||(b=!0,O=setTimeout(function(){o={},b=!1},1e4)))}function ue(){Object.keys(o).length!==0&&s.getHead().x===o.x&&s.getHead().y===o.y&&(o={},_())}function ye(){xe(),pe()}function xe(){let e=!1;for(;!e;){o={x:Math.floor(Math.random()*y.BOARD_SQUARES_NUMBER),y:Math.floor(Math.random()*y.BOARD_SQUARES_NUMBER)},e=!0;for(let t=0;t<c.levelSettings.obstaclePositions.length;++t)o.x===c.levelSettings.obstaclePositions[t].x&&o.y===c.levelSettings.obstaclePositions[t].y&&(e=!1);for(let t=0;t<s.getLength();++t)o.x===s.getSquarePosition(t).x&&o.y===s.getSquarePosition(t).y&&(e=!1);o.x===r.x&&o.y===r.y&&(e=!1)}}function m(){clearTimeout(O),b=!1,o={}}function pe(){switch(Math.floor(Math.random()*ie)+1){case 1:_=function(){m(),s.lengthen(k)},o.type="lengthen";break;case 2:_=function(){m(),s.shorten(k)},o.type="shorten";break;case 3:_=function(){m(),s.changeSpeed(2)},o.type="speedDown";break;case 4:_=function(){m(),s.changeSpeed(.5)},o.type="speedUp";break;case 5:_=function(){m(),U(10)},o.type="points";break;case 6:_=function(){m(),s.goThroughWalls()},o.type="goThroughWalls";break}}function U(e){P+=e,G(P)}function G(e){document.querySelector("#game__score").innerHTML=e}function ge(e){y.bestScores.push(e),y.bestScores=y.bestScores.sort(function(t,i){return i-t}),N();for(let t=0;t<5;t++)if(y.bestScores[t]){const i=document.createElement("li");i.appendChild(document.createTextNode(y.bestScores[t])),document.querySelector("#game__score-list").appendChild(i).classList.add("game__score-list-item")}}function de(){y.bestScores=[]}function N(){document.querySelector("#game__score-list").innerHTML=""}function fe(){const e=s.getHead();for(let t=1;t<s.getLength();++t)e.x===s.getSquarePosition(t).x&&e.y===s.getSquarePosition(t).y&&C()}function he(){if(s.values.canGoThroughWalls)return;const e=s.getHead();for(let t=0;t<c.levelSettings.obstaclePositions.length;++t)e.x===c.levelSettings.obstaclePositions[t].x&&e.y===c.levelSettings.obstaclePositions[t].y&&C()}function C(){ge(P),m(),H(),M()}function H(){P=0,T=0,b=!1,s.resetVales(),G(0)}const g={values:y,setSettings:le,startGame:M,clearPowerupTimeout:m,clearRenderedScoreList:N,clearBestScores:de,resetGameValues:H},E={canvas:null,ctx:null};function me(){document.querySelector("#settings__start-button").addEventListener("click",function(){E.canvas=document.querySelector("#canvas"),E.ctx=canvas.getContext("2d");const e=ve();Se(),g.setSettings(e),g.startGame()}),document.querySelector("#header__back-arrow").addEventListener("click",function(){clearTimeout(g.values.loopGameTimeout),we(),_e()})}function ve(){const e={level:document.querySelector("#level").value,speed:document.querySelector("#speed").value,powerupSpeedChangeTime:document.querySelector("#speed-change-time").value,lengthChange:document.querySelector("#length-change").value},t=W["level"+e.level];return{levelSettings:t,snakeSpeed:t.speed/e.speed,snakePowerupSpeedChangeTime:e.powerupSpeedChangeTime,snakeLengthChange:e.lengthChange}}function Se(){document.querySelector("#game").classList.remove("game--hidden"),document.querySelector("#settings").classList.add("settings--hidden"),document.querySelector("#header__back-arrow").classList.remove("header__back-arrow--hidden")}function _e(){document.querySelector("#game").classList.add("game--hidden"),document.querySelector("#settings").classList.remove("settings--hidden"),document.querySelector("#header__back-arrow").classList.add("header__back-arrow--hidden")}function we(){g.resetGameValues(),g.clearPowerupTimeout(),g.clearBestScores(),g.clearRenderedScoreList()}const l={values:E,init:me};document.querySelector("#app").innerHTML=`
  <div class="wrapper">
    <header class="header">
      <span id="header__back-arrow" class="header__back-arrow header__back-arrow--hidden" title="Go back to settings"><</span>
      <div class="header__heading-wrapper">
        <h1 class="header__heading">Snake</h1>
      </div>
    </header>
    <section id="settings" class="settings">
      <fieldset class="settings__fieldset">
        <legend class="settings__title">Settings</legend>

        <section class="settings__option">
          <label class="settings__label" for="level">Level</label>
          <select id="level" class="settings__select">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="speed">Snake speed</label>
          <select id="speed" class="settings__select">
            <option value="1">slow</option>
            <option value="2">medium</option>
            <option value="3">fast</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="speed-change-time">Snake speed change after catching a powerup</label>
          <select id="speed-change-time" class="settings__select">
            <option value="1">1 second</option>
            <option value="2">2 seconds</option>
            <option value="3">3 seconds</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="length-change">Snake length change after catching a powerup</label>
          <select id="length-change" class="settings__select">
            <option value="1">1 cell</option>
            <option value="2">2 cells</option>
            <option value="3">3 cells</option>
          </select>
        </section>

        <div class="settings__button-wrapper">
          <button type="button" id="settings__start-button" class="settings__start-button">Start</button>
        </div>
      </fieldset>
    </section>

    <section id="game" class="game game--hidden">
        <section>
          <p class="game__score-text">Score: <span id="game__score">0</span></p>
          <canvas id="canvas" class="game__canvas" height="601px" width="601px"></canvas>
        </section>

        <section class="game__best-scores">
          <p class="game__best-scores-text">Best scores:</p>
          <ol id="game__score-list" class="game__score-list"></ol>
        </section>
    </section>
  </div>
`;l.init();
