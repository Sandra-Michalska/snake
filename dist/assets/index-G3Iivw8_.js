(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const l of e)if(l.type==="childList")for(const u of l.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&t(u)}).observe(document,{childList:!0,subtree:!0});function p(e){const l={};return e.integrity&&(l.integrity=e.integrity),e.referrerPolicy&&(l.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?l.credentials="include":e.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function t(e){if(e.ep)return;e.ep=!0;const l=p(e);fetch(e.href,l)}})();const D={level1:{level:1,speed:.7,obstaclePositions:[{x:3,y:2},{x:3,y:3},{x:17,y:2},{x:17,y:3},{x:17,y:4},{x:7,y:7},{x:7,y:8},{x:7,y:9},{x:8,y:7},{x:8,y:8},{x:9,y:7},{x:9,y:8},{x:12,y:16},{x:12,y:13},{x:12,y:14},{x:12,y:15},{x:4,y:18},{x:4,y:17},{x:3,y:18},{x:3,y:17}]},level2:{level:2,speed:.55,obstaclePositions:[{x:1,y:7},{x:3,y:2},{x:3,y:3},{x:3,y:15},{x:3,y:14},{x:4,y:17},{x:4,y:18},{x:6,y:8},{x:7,y:7},{x:7,y:8},{x:8,y:7},{x:8,y:8},{x:9,y:7},{x:9,y:8},{x:12,y:13},{x:12,y:14},{x:12,y:15},{x:12,y:16},{x:13,y:15},{x:13,y:16},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:17,y:7},{x:17,y:8}]},level3:{level:3,speed:.45,obstaclePositions:[{x:1,y:7},{x:3,y:1},{x:3,y:2},{x:3,y:15},{x:3,y:14},{x:4,y:3},{x:4,y:4},{x:4,y:17},{x:4,y:18},{x:6,y:9},{x:7,y:8},{x:7,y:7},{x:7,y:6},{x:8,y:7},{x:8,y:8},{x:8,y:15},{x:9,y:16},{x:10,y:17},{x:12,y:7},{x:12,y:8},{x:13,y:15},{x:13,y:16},{x:16,y:13},{x:16,y:14},{x:16,y:18},{x:16,y:19},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:19,y:7},{x:19,y:8}]},level4:{level:4,speed:.38,obstaclePositions:[{x:0,y:1},{x:0,y:4},{x:0,y:19},{x:0,y:10},{x:0,y:11},{x:0,y:12},{x:2,y:2},{x:2,y:3},{x:3,y:12},{x:3,y:13},{x:4,y:9},{x:4,y:10},{x:4,y:19},{x:5,y:7},{x:5,y:6},{x:6,y:7},{x:6,y:8},{x:6,y:15},{x:7,y:7},{x:7,y:8},{x:7,y:15},{x:8,y:0},{x:8,y:1},{x:8,y:2},{x:9,y:16},{x:9,y:17},{x:10,y:15},{x:10,y:16},{x:10,y:17},{x:11,y:9},{x:11,y:8},{x:11,y:2},{x:12,y:5},{x:13,y:6},{x:13,y:7},{x:14,y:10},{x:14,y:11},{x:15,y:13},{x:15,y:14},{x:16,y:17},{x:16,y:19},{x:17,y:1},{x:17,y:2},{x:17,y:3},{x:15,y:1},{x:15,y:2},{x:18,y:3},{x:18,y:16},{x:18,y:17},{x:18,y:18},{x:18,y:19},{x:19,y:17}]},level5:{level:5,speed:.3,obstaclePositions:[{x:0,y:4},{x:0,y:1},{x:0,y:10},{x:0,y:18},{x:0,y:11},{x:0,y:12},{x:2,y:2},{x:2,y:3},{x:2,y:5},{x:2,y:6},{x:3,y:12},{x:3,y:13},{x:4,y:9},{x:4,y:10},{x:4,y:19},{x:5,y:3},{x:5,y:4},{x:5,y:7},{x:5,y:6},{x:6,y:4},{x:6,y:8},{x:6,y:15},{x:8,y:0},{x:8,y:1},{x:8,y:2},{x:8,y:13},{x:8,y:14},{x:9,y:8},{x:9,y:13},{x:9,y:14},{x:10,y:11},{x:10,y:17},{x:11,y:9},{x:11,y:8},{x:11,y:18},{x:11,y:19},{x:11,y:2},{x:12,y:5},{x:13,y:6},{x:13,y:7},{x:13,y:4},{x:13,y:5},{x:13,y:10},{x:13,y:11},{x:15,y:15},{x:15,y:16},{x:15,y:18},{x:15,y:19},{x:16,y:2},{x:16,y:18},{x:16,y:19},{x:17,y:6},{x:17,y:7},{x:17,y:8},{x:18,y:1},{x:18,y:2},{x:18,y:8},{x:18,y:16},{x:18,y:14},{x:18,y:13},{x:18,y:19},{x:19,y:17}]}};function N(){let s=[],c="right";this.canChangeDirection=!0,this.canGoThroughWalls=!1,this.speed=0,this.powerupSpeedChangeTime=0;const p=this;this.setPosition=function(){s.push({x:2,y:0},{x:1,y:0},{x:0,y:0})},this.getSquarePosition=function(t){return s[t]},this.getHead=function(){return s[0]},this.getLength=function(){return s.length},this.move=function(){for(let t=s.length-1;t>0;t--)s[t].x=s[t-1].x,s[t].y=s[t-1].y;c==="right"&&s[0].x++,c==="left"&&s[0].x--,c==="down"&&s[0].y++,c==="up"&&s[0].y--},this.changeDirection=function(t,e){if(this.canChangeDirection&&e){if(t.preventDefault(),c==="right"&&e==="left"||c==="left"&&e==="right"||c==="up"&&e==="down"||c==="down"&&e==="up")return;c=e,this.canChangeDirection=!1}},this.goThroughBoardEdges=function(){s[0].x>h.BOARD_SQUARES_NUMBER-1&&(s[0].x=0),s[0].x<0&&(s[0].x=h.BOARD_SQUARES_NUMBER-1),s[0].y>h.BOARD_SQUARES_NUMBER-1&&(s[0].y=0),s[0].y<0&&(s[0].y=h.BOARD_SQUARES_NUMBER-1)},this.lengthen=function(t){const e=s[s.length-1];for(let l=0;l<t;l++)s.push({x:e.x,y:e.y})},this.shorten=function(t){for(let e=0;e<t;e++)s.pop()},this.changeSpeed=function(t){this.speed*=t,setTimeout(function(){p.speed/=t},p.powerupSpeedChangeTime*1e3)},this.goThroughWalls=function(){this.canGoThroughWalls=!0,setTimeout(function(){p.canGoThroughWalls=!1},7e3)},this.resetVales=function(){s=[],c="right"}}function M(){this.BOARD_SQUARES_NUMBER=20;const s=1e3;let c=0,p=0,t=null,e={},l=6,u=null,m=1;this.bestScores=[];let i;this.loopGameTimeout;let y,x=!1,r=null;const n=new N,g=this;this.setSettings=function(a){r=a,n.speed=r.snakeSpeed,n.powerupSpeedChangeTime=r.snakepowerupSpeedChangeTime,m=r.snakeLengthChange},this.startGame=function(){this.resetGameValues(),d.drawBackground(),d.drawObstacles(r.levelSettings.obstaclePositions,n),n.setPosition(),d.drawSnake(n),b(),d.drawApple(t),document.addEventListener("keydown",function(a){const o={37:"left",38:"up",39:"right",40:"down"},S=a.which,U=o[S];n.changeDirection(a,U)}),i=setTimeout(_,s)};function _(){clearTimeout(i),clearTimeout(g.loopGameTimeout),n.canChangeDirection=!0,d.drawBackground(),d.drawObstacles(r.levelSettings.obstaclePositions,n),T(),d.drawPowerup(e),d.drawApple(t),n.move(),n.goThroughBoardEdges(),d.drawSnake(n),P(),A(),q(),E(),g.loopGameTimeout=setTimeout(_,n.speed*s)}function w(a){c+=a,document.querySelector("#game__score").innerHTML=c}function b(){if(t)return;let a=!1;for(;!a;){t={x:Math.floor(Math.random()*g.BOARD_SQUARES_NUMBER),y:Math.floor(Math.random()*g.BOARD_SQUARES_NUMBER)},a=!0;for(let o=0;o<r.levelSettings.obstaclePositions.length;++o)t.x===r.levelSettings.obstaclePositions[o].x&&t.y===r.levelSettings.obstaclePositions[o].y&&(a=!1);for(let o=0;o<n.getLength();++o)t.x===n.getSquarePosition(o).x&&t.y===n.getSquarePosition(o).y&&(a=!1)}}function E(){const a=n.getHead();a.x===t.x&&a.y===t.y&&(t=null,b(),d.drawApple(t),n.lengthen(1),w(r.levelSettings.level),p+=1,(p+r.levelSettings.level)%3===0&&I())}function T(){Object.keys(e).length!==0&&(x||(x=!0,y=setTimeout(function(){e={},x=!1},1e4)))}function P(){Object.keys(e).length!==0&&n.getHead().x===e.x&&n.getHead().y===e.y&&(e={},u())}function I(){R(),L()}function R(){let a=!1;for(;!a;){e={x:Math.floor(Math.random()*g.BOARD_SQUARES_NUMBER),y:Math.floor(Math.random()*g.BOARD_SQUARES_NUMBER)},a=!0;for(let o=0;o<r.levelSettings.obstaclePositions.length;++o)e.x===r.levelSettings.obstaclePositions[o].x&&e.y===r.levelSettings.obstaclePositions[o].y&&(a=!1);for(let o=0;o<n.getLength();++o)e.x===n.getSquarePosition(o).x&&e.y===n.getSquarePosition(o).y&&(a=!1);e.x===t.x&&e.y===t.y&&(a=!1)}}function f(){clearTimeout(y),x=!1,e={}}function L(){switch(Math.floor(Math.random()*l)+1){case 1:u=function(){f(),n.lengthen(m)},e.type="lengthen";break;case 2:u=function(){f(),n.shorten(m)},e.type="shorten";break;case 3:u=function(){f(),n.changeSpeed(2)},e.type="speedDown";break;case 4:u=function(){f(),n.changeSpeed(.5)},e.type="speedUp";break;case 5:u=function(){f(),w(10)},e.type="points";break;case 6:u=function(){f(),n.goThroughWalls()},e.type="goThroughWalls";break}}this.resetGameValues=function(){c=0,p=0,x=!1,n.resetVales(),document.querySelector("#game__score").innerHTML=0};function k(a){g.bestScores.push(a),g.bestScores=g.bestScores.sort(function(o,S){return S-o}),document.querySelector("#game__score-list").innerHTML="";for(let o=0;o<5;o++)if(g.bestScores[o]){const S=document.createElement("li");S.appendChild(document.createTextNode(g.bestScores[o])),document.querySelector("#game__score-list").appendChild(S).classList.add("game__score-list-item")}}function A(){const a=n.getHead();for(let o=1;o<n.getLength();++o)a.x===n.getSquarePosition(o).x&&a.y===n.getSquarePosition(o).y&&v()}function q(){if(n.canGoThroughWalls)return;const a=n.getHead();for(let o=0;o<r.levelSettings.obstaclePositions.length;++o)a.x===r.levelSettings.obstaclePositions[o].x&&a.y===r.levelSettings.obstaclePositions[o].y&&v()}function v(){k(c),f(),g.startGame()}}function O(){const t={},e=document.querySelector("#canvas"),l=e.getContext("2d");t.apple=new Image,t.apple.src="/images/apple.png",t.obstacle=new Image,t.obstacle.src="/images/obstacle.png",t.obstacleTransparent=new Image,t.obstacleTransparent.src="/images/obstacle-transparent.png",t.lengthen=new Image,t.lengthen.src="/images/powerups/lengthen.png",t.shorten=new Image,t.shorten.src="/images/powerups/shorten.png",t.speedUp=new Image,t.speedUp.src="/images/powerups/speed-up.png",t.speedDown=new Image,t.speedDown.src="/images/powerups/speed-down.png",t.points=new Image,t.points.src="/images/powerups/points.png",t.goThroughWalls=new Image,t.goThroughWalls.src="/images/powerups/go-through-walls.png";function u(i,y,x,r,n){const g=y*30+1,_=x*30+1;l.drawImage(i,g,_,r,n)}function m(i,y,x){const r=1*i+1,n=1*y+1;l.fillStyle=x,l.fillRect(i*29+r,y*29+n,29,29)}this.drawBackground=function(){l.fillStyle="#fff",l.strokeStyle="#e1dfdc",l.fillRect(0,0,e.height,e.width);for(let i=.5;i<e.width;i+=30)l.moveTo(i,0),l.lineTo(i,e.height);for(let i=.5;i<e.height;i+=30)l.moveTo(0,i),l.lineTo(e.width,i);l.stroke()},this.drawObstacles=function(i,y){let x="obstacle";y.canGoThroughWalls&&(x="obstacleTransparent"),i.forEach(function(r){u(t[x],r.x,r.y,29,29)})},this.drawSnake=function(i){for(let y=0;y<i.getLength();y++){if(y===0){m(i.getSquarePosition(y).x,i.getSquarePosition(y).y,"#e67312");continue}m(i.getSquarePosition(y).x,i.getSquarePosition(y).y,"#fc9125")}},this.drawApple=function(i){i!==null&&u(t.apple,i.x,i.y,29,29)},this.drawPowerup=function(i){Object.keys(i).length!==0&&u(t[i.type],i.x,i.y,29,29)}}let d=null,h=null;function B(){d=new O,document.querySelector("#settings__start-button").addEventListener("click",function(){const s=G();H(),h=new M,h.setSettings(s),h.startGame()})}function G(){const s={level:document.querySelector("#level").value,speed:document.querySelector("#speed").value,powerupSpeedChangeTime:document.querySelector("#speed-change-time").value,lengthChange:document.querySelector("#length-change").value},c=D["level"+s.level];return{levelSettings:c,snakeSpeed:c.speed/s.speed,snakepowerupSpeedChangeTime:s.powerupSpeedChangeTime,snakeLengthChange:s.lengthChange}}function H(){document.querySelector("#game").classList.remove("game--hidden"),document.querySelector("#settings").classList.add("settings--hidden"),document.querySelector("#header__back-arrow").classList.remove("header__back-arrow--hidden"),document.querySelector("#header__back-arrow").addEventListener("click",function(){clearTimeout(h.loopGameTimeout),h.resetGameValues(),document.querySelector("#game__score-list").innerHTML="",document.querySelector("#game").classList.add("game--hidden"),document.querySelector("#settings").classList.remove("settings--hidden"),document.querySelector("#header__back-arrow").classList.add("header__back-arrow--hidden")})}document.querySelector("#app").innerHTML=`
  <div class="wrapper">
    <header class="header">
      <span id="header__back-arrow" class="header__back-arrow header__back-arrow--hidden" title="Go back to settings"><</span>
      <div class="header__heading-wrapper">
        <h1 class="header__heading">Snake</h1>
      </div>
    </header>
    <section id="settings" class="settings">
      <fieldset class="settings__fieldset">
        <legend class="settings__title">Settings</legend>

        <section class="settings__option">
          <label class="settings__label" for="level">Level</label>
          <select id="level" class="settings__select">
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="speed">Snake speed</label>
          <select id="speed" class="settings__select">
            <option value="1">slow</option>
            <option value="2">medium</option>
            <option value="3">fast</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="speed-change-time">Snake speed change after catching a powerup</label>
          <select id="speed-change-time" class="settings__select">
            <option value="1">1 second</option>
            <option value="2">2 seconds</option>
            <option value="3">3 seconds</option>
          </select>
        </section>
        <section class="settings__option">
          <label class="settings__label" for="length-change">Snake length change after catching a powerup</label>
          <select id="length-change" class="settings__select">
            <option value="1">1 cell</option>
            <option value="2">2 cells</option>
            <option value="3">3 cells</option>
          </select>
        </section>

        <div class="settings__button-wrapper">
          <button type="button" id="settings__start-button" class="settings__start-button">Start</button>
        </div>
      </fieldset>
    </section>

    <section id="game" class="game game--hidden">
        <section>
          <p class="game__score-text">Score: <span id="game__score">0</span></p>
          <canvas id="canvas" class="game__canvas" height="601px" width="601px"></canvas>
        </section>

        <section class="game__best-scores">
          <p class="game__best-scores-text">Best scores:</p>
          <ol id="game__score-list" class="game__score-list"></ol>
        </section>
    </section>
  </div>
`;B();
